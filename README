# Download Android source with local_manifests
 Refer to http://source.android.com/source/downloading.html

  $ repo init -u https://android.googlesource.com/platform/manifest -b android-10.0.0_r11
  $ git clone https://github.com/android-risc-v/local_manifests .repo/local_manifests -b arv-10_r11
  $ repo sync

# Build Android
 Continue build referring to http://source.android.com/source/building.html

  $ source build/envsetup.sh
  $ lunch ice910dk-userdebug
  $ export LD_LIBRARY_PATH="${ANDROID_BUILD_TOP}/out/soong/host/linux-x86/lib64:${ANDROID_BUILD_TOP}/prebuilts/build-tools/linux-x86/lib64:${ANDROID_BUILD_TOP}/prebuilts/clang/host/linux-x86/clang-dev/lib64:${ANDROID_BUILD_TOP}/out/soong/host/linux-x86/lib:/${ANDROID_BUILD_TOP}/out/host/linux-x86/lib64:${ANDROID_BUILD_TOP}/prebuilts/clang/host/linux-x86/clang-dev/lib64/"
  $ m
  $ cp prebuilts/vndk/v28/riscv64/arch-riscv64-riscv64/shared/vndk-sp/libcompiler_rt.so out/target/product/ice910dk/system/lib64/
  $ rm -rf out/target/product/ice910dk/obj/PACKAGING
  $ m

# Flashing
  https://github.com/android-risc-v/aosp-riscv#setup-rvb-ice-environment

Use -j[n] option on sync & build steps, if build host has a good number of CPU cores.
